name: deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm test

      # Set up Docker Buildx (optional but good for performance/flexibility)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.PASSWORD }}" | docker login -u ${{ secrets.USERNAME }} --password-stdin

      # Build Docker image with commit SHA
      - name: Build Docker image
        run: docker build -t sainkaranak/project:${{ github.sha }} .

      # Tag Docker image as latest
      - name: Tag image as latest
        run: docker tag sainkaranak/project:${{ github.sha }} sainkaranak/project:latest

      # Push Docker image (SHA and latest tags)
      - name: Push Docker image with SHA
        run: docker push sainkaranak/project:${{ github.sha }}

      - name: Push Docker image with latest tag
        run: docker push sainkaranak/project:latest
